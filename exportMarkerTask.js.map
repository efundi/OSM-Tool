{"version":3,"file":"exportMarkerTask.js","mappings":"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","sources":["webpack://pdf-marker/./src-electron/constants.ts","webpack://pdf-marker/./src-electron/utils.ts","webpack://pdf-marker/./src/shared/constants/constants.ts","webpack://pdf-marker/./src/shared/info-objects/assignment-settings.info.ts","webpack://pdf-marker/./src/shared/info-objects/workspace.ts","webpack://pdf-marker/external commonjs \"fs-extra\"","webpack://pdf-marker/external commonjs \"lodash\"","webpack://pdf-marker/external commonjs \"rxjs\"","webpack://pdf-marker/external commonjs \"zip-dir\"","webpack://pdf-marker/external node-commonjs \"fs\"","webpack://pdf-marker/external node-commonjs \"fs/promises\"","webpack://pdf-marker/external node-commonjs \"node:worker_threads\"","webpack://pdf-marker/external node-commonjs \"os\"","webpack://pdf-marker/external node-commonjs \"path\"","webpack://pdf-marker/webpack/bootstrap","webpack://pdf-marker/webpack/runtime/compat get default export","webpack://pdf-marker/webpack/runtime/define property getters","webpack://pdf-marker/webpack/runtime/hasOwnProperty shorthand","webpack://pdf-marker/webpack/runtime/make namespace object","webpack://pdf-marker/./src-electron/export-marker-task.ts"],"sourcesContent":["import {sep} from 'path';\r\n\r\nexport const CONFIG_FILE = 'config.json';\r\n\r\nexport const RUBRICS_FILE = 'rubrics.json';\r\nexport const APP_DATA_DIR = process.env.APPDATA || (process.platform === 'darwin' ? process.env.HOME +\r\n  '/Library/Preferences' : process.env.HOME + '/.local/share');\r\nexport const CONFIG_DIR = APP_DATA_DIR + sep + 'pdf-config' + sep;\r\nexport const COMMENTS_FILE = 'comments.json';\r\n\r\n/*COMMON MESSAGES*/\r\nexport const INVALID_RUBRIC_JSON_FILE = 'Rubric file is not a valid JSON file!';\r\nexport const COULD_NOT_CREATE_RUBRIC_FILE = 'Failed to read rubric file!';\r\nexport const COULD_NOT_READ_RUBRIC_LIST = 'Could not read list of rubrics!';\r\nexport const NOT_PROVIDED_RUBRIC = 'Rubric must be provided!';\r\nexport const COULD_NOT_CREATE_CONFIG_DIRECTORY = 'Failed to create configuration directory!';\r\nexport const NOT_CONFIGURED_CONFIG_DIRECTORY = 'Configure default location to extract files to on the settings page!';\r\nexport const EXTRACTED_ZIP = 'Successfully extracted assignment to selected workspace!';\r\nexport const EXTRACTED_ZIP_BUT_FAILED_TO_WRITE_TO_RUBRIC = 'Successfully extracted assignment to selected workspace! ' +\r\n  'But Failed to write to rubrics file!';\r\nexport const INVALID_STUDENT_FOLDER = 'Invalid student folder';\r\n\r\nexport const COULD_NOT_READ_COMMENT_LIST = 'Could not read list of comments!';\r\nexport const NOT_PROVIDED_COMMENT = 'Comment must be provided!';\r\n\r\nexport const HIGHLIGHT_HEIGHT = 20;\r\nexport const STUDENT_DIRECTORY_ID_REGEX = /.*\\((.+)\\)/;\r\nexport const STUDENT_DIRECTORY_REGEX = /(.*), (.*)\\((.+)\\)/;\r\nexport const STUDENT_DIRECTORY_NO_NAME_REGEX = /(.*),\\((.+)\\)/;\r\n","\r\nimport {constants, existsSync, lstatSync, readdirSync, rmdirSync, unlinkSync} from 'fs';\r\nimport {access, readdir, stat, writeFile} from 'fs/promises';\r\nimport {sep} from 'path';\r\nimport {noop} from 'rxjs';\r\nimport {IpcResponse} from '@shared/ipc/ipc-response';\r\nimport {IpcMainInvokeEvent} from 'electron';\r\nimport {Stream} from 'stream';\r\n\r\ndeclare type IpcHandler<T> = (event: IpcMainInvokeEvent, ...args: any[]) => Promise<T>;\r\n\r\n/**\r\n * This is a middleware response used for IPC to work around a bug in electron where rejected promises\r\n * loose the original reason. This way, the main process always returns a resolved promise, but the result IpcResponse\r\n * will contain information if there was an error or not, and then reject the promise in the renderer side\r\n * https://github.com/electron/electron/issues/24427\r\n * @param listener\r\n */\r\nexport function toIpcResponse<T>(listener: IpcHandler<T>): IpcHandler<IpcResponse<T>> {\r\n  // Return a function that can be used as an IPC handler\r\n  return (event, ...args) => {\r\n    return listener(event, ...args).then(\r\n      (data) => {\r\n        return {\r\n          data\r\n        } as IpcResponse<T>;\r\n      }, (error) => {\r\n        return {\r\n          error\r\n        } as IpcResponse<T>;\r\n      });\r\n  };\r\n}\r\n\r\nexport const isFunction = (functionToCheck) => {\r\n  return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\r\n};\r\n\r\nexport const isNullOrUndefined = (object: any): boolean => {\r\n  return (object === null || object === undefined);\r\n};\r\n\r\nexport const isNullOrUndefinedOrEmpty = (object: string): boolean => {\r\n  return (object === null || object === undefined || object === '');\r\n};\r\n\r\n\r\nexport function writeToFile(filePath: string,\r\n                            data: Uint8Array | string,\r\n                            customSuccessMsg: string = null,\r\n                            customFailureMsg: string = null): Promise<string> {\r\n  return writeFile(filePath, data).then(() => {\r\n    return (customSuccessMsg) ? customSuccessMsg : 'Successfully saved to file!';\r\n  }, (err) => {\r\n    return Promise.reject((customFailureMsg) ? customFailureMsg : err.message);\r\n  });\r\n}\r\n\r\n\r\n/*HELPER FUNCTIONS*/\r\nexport function checkAccess(filePath: string): Promise<any> {\r\n  return access(filePath, constants.F_OK).then(noop, (err) => {\r\n    return Promise.reject(err.message);\r\n  });\r\n}\r\n\r\n/*END HELPER FUNCTIONS*/\r\n\r\n\r\n\r\nexport const isJson = (str) => {\r\n  try {\r\n    JSON.parse(str);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n\r\n\r\nexport const deleteFolderRecursive = (path) => {\r\n  if (existsSync(path)) {\r\n    readdirSync(path).forEach(function(file, index) {\r\n      const curPath = path + '/' + file;\r\n      if (isFolder(curPath)) { // recurse\r\n        deleteFolderRecursive(curPath);\r\n      } else { // delete file\r\n        unlinkSync(curPath);\r\n      }\r\n    });\r\n    rmdirSync(path);\r\n  }\r\n};\r\n\r\nexport function isFolder(curPath: string) {\r\n  return lstatSync(curPath).isDirectory();\r\n}\r\n\r\nexport function isEmpty(str: string) {\r\n  return str === null || str === undefined || str.length === 0;\r\n}\r\n\r\nexport function isBlank(data: string = '') {\r\n\r\n  if (data === null || data === undefined) {\r\n    return true;\r\n  }\r\n\r\n  data += '';\r\n  return data === '' || data.trim() === '';\r\n}\r\n\r\n\r\n\r\nexport function joinError(currentMessage: string = '', newMessage: string = ''): string {\r\n  currentMessage += (!isEmpty(currentMessage)) ? `, ${newMessage}` : newMessage;\r\n  return currentMessage;\r\n}\r\n\r\n\r\nexport function getAllFiles(dirPath: string, arrayOfFiles?: string[]): Promise<string[]> {\r\n  return readdir(dirPath).then((files) => {\r\n    arrayOfFiles = arrayOfFiles || [];\r\n\r\n    const promises: Promise<any>[] = files.map((file) => {\r\n      return stat(dirPath + sep + file).then((statInfo) => {\r\n        if (statInfo.isDirectory()) {\r\n          return getAllFiles(dirPath + sep + file, arrayOfFiles).then((dirFiles) => {\r\n            arrayOfFiles = dirFiles;\r\n          });\r\n        } else {\r\n          arrayOfFiles.push(dirPath + sep + file);\r\n        }\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises).then(() => arrayOfFiles);\r\n  });\r\n}\r\n\r\nexport function stream2buffer(stream: Stream): Promise<Buffer> {\r\n  return new Promise < Buffer > ((resolve, reject) => {\r\n    const _buf = new Array<any>();\r\n    stream.on('data', chunk => _buf.push(chunk));\r\n    stream.on('end', () => resolve(Buffer.concat(_buf)));\r\n    stream.on('error', err => reject(`error converting stream - ${err}`));\r\n  });\r\n}\r\n","import {TreeNode, TreeNodeType} from '@shared/info-objects/workspace';\r\n\r\nexport const DEFAULT_COLOR = '#6f327a';\r\nexport const DEFAULT_WORKSPACE = 'Default Workspace';\r\nexport const SUBMISSION_FOLDER = 'Submission attachment(s)';\r\nexport const FEEDBACK_FOLDER = 'Feedback Attachment(s)';\r\nexport const SETTING_FILE = '.settings.json';\r\nexport const MARK_FILE = '.marks.json';\r\nexport const GRADES_FILE = 'grades.csv';\r\n\r\nexport const ASSIGNMENT_ROOT_FILES = [GRADES_FILE, 'grades.xls', 'grades.xlsx'];\r\n\r\nexport const ASSIGNMENT_BACKUP_DIR = '.backup';\r\nexport const FEEDBACK_ZIP_ENTRY_REGEX = /\\/(.*)\\/Feedback Attachment\\(s\\)\\/(.*)\\.pdf/;\r\nexport const SUBMISSION_ZIP_ENTRY_REGEX = /\\/(.*)\\/Submission attachment\\(s\\)\\/(.*)\\.pdf/;\r\n\r\nexport const PDFM_FILES = [MARK_FILE, SETTING_FILE];\r\n\r\n\r\nexport function uuidv4() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n    const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function PDFM_FILES_FILTER(treeNode: TreeNode): boolean {\r\n  return !(treeNode.type === TreeNodeType.FILE && PDFM_FILES.indexOf(treeNode.name) >= 0);\r\n}\r\n\r\n/**\r\n * < 0, a should be before\r\n * = 0, same level\r\n * > 0, a should be after\r\n * @param a\r\n * @param b\r\n * @constructor\r\n */\r\nexport const PDFM_FILE_SORT = (a: TreeNode, b: TreeNode) => {\r\n  let diff = a.type - b.type;\r\n  if (diff === 0) {\r\n    diff = a.name.localeCompare(b.name);\r\n  }\r\n  return diff;\r\n};\r\n","import {IRubric} from './rubric.class';\r\nimport {DEFAULT_COLOR} from '@shared/constants/constants';\r\n\r\nexport const AssignmentSettingsVersion = 1;\r\n\r\nexport enum SourceFormat {\r\n  MANUAL = 'MANUAL',\r\n  SAKAI = 'SAKAI',\r\n  GENERIC = 'GENERIC',\r\n}\r\n\r\n/**\r\n * An enum defining the format in which an assignment is in.\r\n * Assignments can be imported, shared, and exported for marking.\r\n * This enum defines these formats as they are written to file.\r\n */\r\nexport enum DistributionFormat {\r\n\r\n  /**\r\n   * An assignment in the source format.\r\n   */\r\n  DISTRIBUTED = 'DISTRIBUTED',\r\n\r\n\r\n  /**\r\n   * An assignment that is only used by a single user.\r\n   * This is also the default if nothing is set\r\n   */\r\n  STANDALONE = 'STANDALONE'\r\n\r\n}\r\n\r\nexport enum AssignmentState {\r\n  NOT_STARTED = 'NOT_STARTED',\r\n  IN_PROGRESS = 'IN_PROGRESS',\r\n  FINALIZED = 'FINALIZED',\r\n  SENT_FOR_REVIEW = 'SENT_FOR_REVIEW',\r\n}\r\n\r\n/**\r\n * A reference to a marker if a submission is allocated\r\n */\r\nexport interface MakerReference {\r\n  /**\r\n   * Unique UUID of the maker as generated by the source assignment\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * Email address of the marker\r\n   */\r\n  email?: string;\r\n}\r\n\r\n/**\r\n * A interface defining a submission that has been allocated to a marker\r\n */\r\nexport interface SubmissionAllocation {\r\n  /**\r\n   *  Student ID of the submission to allocate\r\n   */\r\n  studentId: string;\r\n\r\n  /**\r\n   * Reference to the marker for the submission\r\n   */\r\n  marker: MakerReference;\r\n}\r\n\r\n\r\nexport enum SubmissionState {\r\n  /**\r\n   * New untouched submission\r\n   * text: \"--\"\r\n   */\r\n  NEW = 'NEW',\r\n\r\n  /**\r\n   * Allocated to a marker\r\n   * text: \"Assigned\"\r\n   */\r\n  ASSIGNED_TO_MARKER = 'ASSIGNED_TO_MARKER',\r\n\r\n  /**\r\n   * A marked submission\r\n   * text: \"Marked\"\r\n   */\r\n  MARKED = 'MARKED',\r\n\r\n  /**\r\n   * An assignment that has not been marked, but has been finalized or exported for review\r\n   * text: 'Not Marked'\r\n   */\r\n  NOT_MARKED = 'NOT_MARKED',\r\n\r\n  SENT_FOR_MODERATION = 'SENT_FOR_MODERATION',\r\n\r\n  MODERATED = 'MODERATED'\r\n}\r\n\r\nexport interface Submission {\r\n  studentName: string;\r\n  studentSurname: string;\r\n  studentId: string;\r\n  allocation: MakerReference;\r\n  directoryName: string;\r\n  mark: number | null;\r\n  state: SubmissionState;\r\n  /**\r\n   * Status for this submission as received from the LMS (grades.csv)\r\n   */\r\n  lmsStatusText?: string;\r\n}\r\n\r\nexport interface AssignmentSettingsInfo {\r\n  /**\r\n   * Unique identifier of this assignment from the source.\r\n   * It can happen that markers have allocation imports that are\r\n   * from the same source, but imported as different assignments.\r\n   * This id should not be used to check for unique assignments in a workspace,\r\n   * it should instead be used to match a marker's export with the original source assignment\r\n   */\r\n  sourceId: string;\r\n\r\n  /**\r\n   * Version of the settings assignment settings file\r\n   */\r\n  version?: number;\r\n\r\n  /**\r\n   * Name of the assignment\r\n   */\r\n  assignmentName: string;\r\n\r\n  /**\r\n   * Original owner of the assignment import.\r\n   */\r\n  owner?: MakerReference;\r\n\r\n  /**\r\n   * Format of the assignment directory\r\n   */\r\n  distributionFormat?: DistributionFormat;\r\n\r\n  /**\r\n   * Submissions part of this assignment.\r\n   */\r\n  submissions: Submission[];\r\n\r\n  /**\r\n   * Default color to use while marking\r\n   */\r\n  defaultColour?: string;\r\n\r\n  /**\r\n   * Copy of the actual rubric applied to this assignment\r\n   */\r\n  rubric?: IRubric;\r\n\r\n  /**\r\n   * Format of the source for this assignment\r\n   */\r\n  sourceFormat?: SourceFormat;\r\n\r\n  /**\r\n   * Current state of the assignment\r\n   */\r\n  state: AssignmentState;\r\n\r\n  /**\r\n   * Date when the assignment state changed\r\n   */\r\n  stateDate?: string;\r\n}\r\n\r\nexport const DEFAULT_ASSIGNMENT_SETTINGS: AssignmentSettingsInfo = {\r\n  assignmentName: null,\r\n  sourceId: null,\r\n  version: AssignmentSettingsVersion,\r\n  distributionFormat: DistributionFormat.STANDALONE,\r\n  owner: null,\r\n  state: AssignmentState.NOT_STARTED,\r\n  stateDate: null,\r\n  defaultColour: DEFAULT_COLOR,\r\n  rubric: null,\r\n  sourceFormat: SourceFormat.MANUAL,\r\n  submissions: []\r\n};\r\n\r\n\r\n","import {find} from 'lodash';\r\n\r\nexport enum TreeNodeType {\r\n  WORKSPACE,\r\n  ASSIGNMENT,\r\n  SUBMISSION,\r\n  FEEDBACK_DIRECTORY,\r\n  SUBMISSIONS_DIRECTORY,\r\n  FILE\r\n}\r\n\r\nexport interface TreeNode {\r\n  name: string;\r\n  type: TreeNodeType;\r\n  dateModified: Date;\r\n  parent: TreeNode;\r\n  children?: TreeNode[];\r\n}\r\n\r\nexport interface Workspace extends TreeNode {\r\n  type: TreeNodeType.WORKSPACE;\r\n  children: WorkspaceAssignment[];\r\n  parent: null;\r\n}\r\n\r\nexport interface WorkspaceAssignment extends TreeNode {\r\n  type: TreeNodeType.ASSIGNMENT;\r\n  children: (WorkspaceFile| StudentSubmission)[];\r\n  parent: Workspace;\r\n}\r\n\r\nexport interface WorkspaceFile extends TreeNode {\r\n  type: TreeNodeType.FILE;\r\n}\r\n\r\nexport interface SubmissionAttachments extends TreeNode {\r\n  type: TreeNodeType.SUBMISSIONS_DIRECTORY;\r\n  children: WorkspaceFile[];\r\n  parent: StudentSubmission;\r\n}\r\n\r\nexport interface FeedbackAttachments extends TreeNode {\r\n  type: TreeNodeType.FEEDBACK_DIRECTORY;\r\n  children: WorkspaceFile[];\r\n  parent: StudentSubmission;\r\n}\r\n\r\nexport interface StudentSubmission extends TreeNode {\r\n  studentName: string;\r\n  studentSurname: string;\r\n  studentId: string;\r\n  children: (WorkspaceFile|SubmissionAttachments|FeedbackAttachments)[];\r\n  parent: WorkspaceAssignment;\r\n}\r\n\r\nexport function findTreeNode(path: string, roots: TreeNode[]): TreeNode {\r\n  const paths = path.split('/');\r\n  let rootNode = find(roots, {name: paths[0]});\r\n  paths.slice(1).forEach(pi => {\r\n    rootNode = rootNode.children.find(tn => tn.name === pi);\r\n  });\r\n  return rootNode;\r\n}\r\n\r\nexport function findTreeNodes(path: string, roots: TreeNode[]): TreeNode[] {\r\n  const nodes: TreeNode[] = [];\r\n  const paths = path.split('/');\r\n  let rootNode = find(roots, {name: paths[0]});\r\n  nodes.push(rootNode);\r\n  paths.slice(1).forEach(pi => {\r\n    rootNode = rootNode.children.find(tn => tn.name === pi);\r\n    nodes.push(rootNode);\r\n  });\r\n  return nodes;\r\n}\r\n","module.exports = require(\"fs-extra\");","module.exports = require(\"lodash\");","module.exports = require(\"rxjs\");","module.exports = require(\"zip-dir\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * ##################################################\r\n *\r\n *  BE REALLY CAREFUL WHAT YOU IMPORT HERE\r\n *  THIS FILE IS BUILD AS A WEB WORKER\r\n *\r\n * ##################################################\r\n */\r\nimport {parentPort} from 'node:worker_threads';\r\nimport {existsSync, mkdtempSync, rmSync} from 'fs';\r\nimport {join, sep} from 'path';\r\nimport {mkdir, readFile, writeFile} from 'fs/promises';\r\nimport {AssignmentSettingsInfo, AssignmentState, Submission} from '../src/shared/info-objects/assignment-settings.info';\r\nimport {cloneDeep, filter, isNil} from 'lodash';\r\nimport {copy} from 'fs-extra';\r\nimport {tmpdir} from 'os';\r\nimport {DEFAULT_WORKSPACE, SETTING_FILE} from '../src/shared/constants/constants';\r\nimport {SettingInfo} from '../src/shared/info-objects/setting.info';\r\nimport {CONFIG_DIR, CONFIG_FILE} from './constants';\r\nimport {isJson, writeToFile} from './utils';\r\nconst zipDir = require('zip-dir');\r\n\r\n/**\r\n * ##################################################\r\n *\r\n *  BE REALLY CAREFUL WHAT YOU IMPORT HERE\r\n *  THIS FILE IS BUILD AS A WEB WORKER\r\n *\r\n * ##################################################\r\n */\r\nfunction getConfig(): Promise<SettingInfo> {\r\n  return readFile(CONFIG_DIR + CONFIG_FILE).then((data) => {\r\n    if (!isJson(data)) {\r\n      return Promise.reject(`Corrupt configuration files at \"${CONFIG_DIR}${CONFIG_FILE}\"`);\r\n    }\r\n\r\n    return JSON.parse(data.toString());\r\n  });\r\n}\r\n\r\nfunction getWorkingDirectoryAbsolutePath(workspaceName: string): Promise<string> {\r\n  return getConfig().then((config) => {\r\n    if (workspaceName === DEFAULT_WORKSPACE || isNil(workspaceName)) {\r\n      return config.defaultPath;\r\n    } else {\r\n      return config.defaultPath + sep + workspaceName;\r\n    }\r\n  });\r\n}\r\nfunction getAssignmentDirectoryAbsolutePath(workspaceName: string, assignmentName: string): Promise<string> {\r\n  return getWorkingDirectoryAbsolutePath(workspaceName).then((workingDirectory) => {\r\n    return workingDirectory + sep + assignmentName;\r\n  });\r\n}\r\n\r\nfunction getAssignmentSettingsFor(workspaceName: string, assignmentName: string): Promise<AssignmentSettingsInfo> {\r\n  return getAssignmentDirectoryAbsolutePath(workspaceName, assignmentName)\r\n    .then((directory) => getAssignmentSettingsAt(directory));\r\n}\r\n\r\n\r\nfunction getAssignmentSettingsAt(assignmentFolder: string): Promise<AssignmentSettingsInfo> {\r\n  assignmentFolder = assignmentFolder.replace(/\\//g, sep);\r\n  if (existsSync(assignmentFolder)) {\r\n    return readFile(assignmentFolder + sep + SETTING_FILE).then((data) => {\r\n      if (!isJson(data)) {\r\n        return Promise.reject('Assignment settings is not JSON');\r\n      }\r\n      return JSON.parse(data.toString()) as AssignmentSettingsInfo;\r\n    }, (error) => {\r\n      return Promise.reject(error.message);\r\n    });\r\n  } else {\r\n    return Promise.reject('Could not load assignment settings');\r\n  }\r\n}\r\n\r\nfunction writeAssignmentSettingsAt(\r\n  assignmentSettings: AssignmentSettingsInfo,\r\n  assignmentAbsolutePath: string): Promise<AssignmentSettingsInfo> {\r\n  const buffer = new Uint8Array(Buffer.from(JSON.stringify(assignmentSettings)));\r\n\r\n  return writeToFile(assignmentAbsolutePath + sep + SETTING_FILE, buffer, null, 'Failed to save assignment settings!').then(() => {\r\n    return assignmentSettings;\r\n  });\r\n}\r\n\r\nfunction cleanupTemp(tmpDir: string) {\r\n  try {\r\n    if (tmpDir) {\r\n      rmSync(tmpDir, { recursive: true });\r\n    }\r\n  } catch (e) {\r\n    console.error(`An error has occurred while removing the temp folder at ${tmpDir}. Please remove it manually. Error: ${e}`);\r\n  }\r\n}\r\n\r\nparentPort.on('message', (exportAssignmentsRequest: any) => {\r\n\r\n    const tempDirectory = mkdtempSync(join(tmpdir(), 'pdfm-'));\r\n    const exportTempDirectory = tempDirectory + sep + exportAssignmentsRequest.assignmentName;\r\n\r\n    return Promise.all([\r\n      getAssignmentSettingsFor(exportAssignmentsRequest.workspaceFolder, exportAssignmentsRequest.assignmentName),\r\n      getAssignmentDirectoryAbsolutePath(exportAssignmentsRequest.workspaceFolder, exportAssignmentsRequest.assignmentName),\r\n      mkdir(exportTempDirectory)\r\n    ])\r\n      .then(([assignmentSettings, originalAssignmentDirectory]) => {\r\n        let exportSubmissions: Submission[] = assignmentSettings.submissions;\r\n\r\n        if (!isNil(exportAssignmentsRequest.studentIds)) {\r\n          // If a list of student ids was supplied we'll filter only those\r\n          exportSubmissions = filter(assignmentSettings.submissions, (submission) => {\r\n            return exportAssignmentsRequest.studentIds.indexOf(submission.studentId) >= 0;\r\n          });\r\n        }\r\n\r\n        // Copy all the submission files\r\n        const promises: Promise<any>[] = exportSubmissions.map((submission) => {\r\n          return copy(\r\n            originalAssignmentDirectory + sep + submission.directoryName,\r\n            exportTempDirectory + sep + submission.directoryName,\r\n            {\r\n              recursive: true\r\n            }\r\n          );\r\n        });\r\n        return Promise.all(promises)\r\n          .then(() => {\r\n            // We need to create a settings file\r\n            const exportSettings = cloneDeep(assignmentSettings);\r\n            exportSettings.state = AssignmentState.NOT_STARTED;\r\n            if (!isNil(exportAssignmentsRequest.studentIds)) {\r\n              // Filter out submissions if required\r\n              exportSettings.submissions = exportSettings.submissions.filter((submission) => {\r\n                return exportAssignmentsRequest.studentIds.indexOf(submission.studentId) >= 0;\r\n              });\r\n            }\r\n            return writeAssignmentSettingsAt(exportSettings, exportTempDirectory);\r\n          })\r\n          .then(() => {\r\n            return zipDir(tempDirectory);\r\n          })\r\n          .then((buffer) => {\r\n            cleanupTemp(tempDirectory);\r\n            return buffer;\r\n          }, (error) => {\r\n            cleanupTemp(tempDirectory);\r\n            return Promise.reject(error.message);\r\n          });\r\n      })\r\n      .then((buffer) => {\r\n        return writeFile(exportAssignmentsRequest.exportPath + sep + exportAssignmentsRequest.assignmentName + '-' + exportAssignmentsRequest.markerEmail + '.zip', buffer);\r\n      })\r\n      .then(() => {\r\n        parentPort.postMessage('Created zip: ' + exportAssignmentsRequest.exportPath + sep + exportAssignmentsRequest.markerEmail + '.zip');\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n});\r\n"],"names":[],"sourceRoot":""}