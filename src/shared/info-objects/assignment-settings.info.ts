import {IRubric} from './rubric.class';

export const AssignmentSettingsVersion = 1;
/**
 * An enum defining the format in which an assignment is in.
 * Assignments can be imported, shared, and exported for marking.
 * This enum defines these formats as they are written to file.
 */
export enum AssignmentFormat {

  /**
   * An assignment in the source format.
   * From this format assignment MARKING_EXPORT assignments can be created
   */
  MARKING_SOURCE = 'MARKING_SOURCE',

  /**
   * An assignment exported to be used by a marker.
   * When a marker has completed marking, the exported file will also have this type
   */
  MARKING_EXPORT = 'MARKING_EXPORT',

  /**
   * An assignment that is only used by a single user.
   * This is also the default if nothing is set
   */
  STANDALONE = 'STANDALONE'

}

/**
 * A reference to a marker if a submission is allocated
 */
export interface MakerReference {
  /**
   * Unique UUID of the maker as generated by the source assignment
   */
  id: string;

  /**
   * Email address of the marker
   */
  email: string;
}

/**
 * A interface defining a submission that has been allocated to a marker
 */
export interface SubmissionAllocation {
  /**
   * Name of the submission directory
   */
  submission: string;

  /**
   * Reference to the marker for the submission
   */
  allocation: MakerReference;
}

export interface AssignmentSettingsInfo {

  /**
   * Version of the settings assignment settings file
   */
  version?: number;

  /**
   * Original owner of the assignment import.
   */
  owner?: MakerReference;

  /**
   * Format of the assignment directory
   */
  assignmentFormat?: AssignmentFormat;

  /**
   * Allocations of assignments in this assignment directory.
   */
  allocations?: SubmissionAllocation[];

  /**
   * Default color to use while marking
   */
  defaultColour?: string;

  /**
   * Copy of the actual rubric applied to this assignment
   */
  rubric?: IRubric;
  /**
   * true if from an lms, imported via import zip, false if created by upload pdf
   */
  isCreated?: boolean;

  /**
   * Date when this assignment was finalized
   */
  dateFinalized?: string;
}
